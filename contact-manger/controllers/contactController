
const asyncHandler =require("express-async-handler");
const Contact = require("../models/contactModel")

const getContact = asyncHandler(async(req,res)=>{
  const contacts= await Contact.find({user_id: req.user.id});
  return res.status(200).json({contacts});
})


const getContactId= asyncHandler(async(req,res)=>{
   const contact = await Contact.findById(req.params.id);
   if(!contact){
    res.status(404);
    throw new Error("Contact not found");
   }
   return res.status(200).json(contact);
})



const createContact = asyncHandler(async(req,res)=>{
    const {name,email,phone}=req.body;
    if(!name || !email || !phone){
        res.status(400)
        throw new Error("All fields are mandatory")
    }
    const data= await Contact.create({
        name,
        email,
        phone,
        user_id:req.user.id

    });
    return res.status(201).json({data})
})


const updateContactId=asyncHandler(async(req,res)=>{
    const contact = await Contact.findById(req.params.id);
    if(!contact){
     res.status(404);
     throw new Error("Contact not found");
    }
    if(contact.user_id.toString()!==req.user.id){
        res.status(403);
        throw new Error("Permission denied")
    }
    const updateContact=await Contact.findByIdAndUpdate(req.params.id,req.body,{new:true});
    return res.status(200).json(updateContact);
})

const deleteContactId=asyncHandler(async (req,res)=>{
    const contact = await Contact.findById(req.params.id);
    if(!contact){
     res.status(404);
     throw new Error("Contact not found");
    }
    if(contact.user_id.toString()!==req.user.id){
        res.status(403);
        throw new Error("Permission denied")
    }
    await Contact.remove(contact);
    return res.status(200).json({msg:`DElete contact of id:${req.params.id}`});
})
module.exports={getContact,createContact,getContactId,updateContactId,deleteContactId}